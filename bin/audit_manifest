#!/usr/bin/env ruby

require 'json'
require 'pp'
require 'byebug'
require 'httparty'

require_relative "lib/common"
include Repository
HELP = <<EOF

Audits an existing repository manifest.json by checking for the existance of referenced file paths and URLs. As all paths are relative to the provided manifest.json file, manually specifying the content directory is unnecessary.

	USAGE: #{__FILE__} <manifest.json>

	EXAMPLE:
		#{__FILE__} manifest.json

EOF


def report(good, bad)
	puts "\nGood file references: #{good.length}"
	puts "Bad file references: #{bad.length}"
	bad.each do |n| puts "\t#{[n['path'],n['url']].join(' ')}" end
	puts "\n"
end

if(ARGV.length != 1)
	puts HELP
	exit 1
else
	file = ARGV[0]
	manifest = JSON.parse(File.read(file))
	root = File.dirname(File.expand_path(file))
	good, bad = audit_content_directory(root, manifest)
	report(good, bad)

	valid = []
	invalid = []
	manifest['groups'].each do |group|
		group['items'].each do |item|
		  path = "#{root}/#{item['path']}"
		  # puts "#{path}"
		  if item['validation']
			if item['validation']['passed']
				valid << item
			else
				invalid << item
			end
		  end
		end
	end
	puts "Declared as valid: #{valid.count}"
	puts "Declared as invalid: #{invalid.count}"
	
	exit 0
end
